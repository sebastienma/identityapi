FORMAT: 1A
HOST: http://www.google.com

# Identity API
Identity API is a service which manage users and its preferences.

# Group Authentication
Authentication resources

## Authentication [/auth/subscribe/{nickname}/{email}/{password}]
+ Parameters
    + nickname (required, string, `foobar`) ... `Nickname` of the user which want to login.
    + email (required, string, `dummy@dummy.com`) ... `Email` of the user which want to login.
    + password (required, string, `secret`) ... `Password` of the user which want to login.
    
### Subscribe and connect to the service [POST]
This verb will throw an error if nickname already exist.

+ Response 200 (application/json)

        {
            "httpCode" : 200,
            "result" : {
                "nickname": "foobar",
                "authorities": "ROLE_USER",
                "credentialList": [{
                    identity: "dummy@dummy.com",
                    secret: "password",
                    domain: "internal"
                    }],
                "connectionKey":"dGVzdEBnbWFpbC5jb206MTM4NDI2MzM2Njo3NzFhZDMxN2JkYTVhNjdmZjZiNmVkNWJmZGQzNTY3MDgxNzM1MmFkY2RhYTAyMDkzZTBjY2VjZWNkYmE0MmQ2",
                "connectionKeyCreatedDate":1383658566439
            }
        }

## Authentication [/auth/bydeviceid/{deviceid}]
+ Parameters
    + deviceid (required, string, `my-dummy-id`) ... String `deviceid` of the device which want to login.

### Connection with a device identifier [POST]
User is automatically created if not exists.

+ Response 200 (application/json)

        {
            "httpCode" : 200,
            "result" : {
                "nickname": "my-dummy-id",
                "authorities": "ROLE_USER",
                "credentialList": [{
                    identity: "dummy@dummy.com",
                    secret: "password",
                    domain: "internal"
                    }],
                "connectionKey":"dGVzdEBnbWFpbC5jb206MTM4NDI2MzM2Njo3NzFhZDMxN2JkYTVhNjdmZjZiNmVkNWJmZGQzNTY3MDgxNzM1MmFkY2RhYTAyMDkzZTBjY2VjZWNkYmE0MmQ2",
                "connectionKeyCreatedDate":1383658566439
            }
        }


## Login [/login?username={username}&password={password}]
+ Parameters
    + username (required, string, `dummy@dummy.com`) ... String `username` of the user which want to login.
    + password (required, string, `secret`) ... String `paswword` of the user which want to login.

## Authentication [/auth/socialapicallback?accessToken={accessToken}&userId={userId}]
+ Parameters
    + accessToken (required, string, `my-wonderfulltoken`) ... `accessToken` of the user which want to login.
    + userId (required, int, `1`) ... `userId` of the user which want to login.

### Authenticate with socialAPI [GET]
This verb is only used by socialAPI. Do not use. Just for internal use.

+ Response 200 (application/json)

        {
            "httpCode" : 200,
            "result" : {
                "nickname": "foobar",
                "authorities": "ROLE_USER",
                "credentialList": [{
                    identity: "dummy@dummy.com",
                    secret: "password",
                    domain: "internal"
                    }],
                "connectionKey":"dGVzdEBnbWFpbC5jb206MTM4NDI2MzM2Njo3NzFhZDMxN2JkYTVhNjdmZjZiNmVkNWJmZGQzNTY3MDgxNzM1MmFkY2RhYTAyMDkzZTBjY2VjZWNkYmE0MmQ2",
                "connectionKeyCreatedDate":1383658566439
            }
        }
        
### Log to the service [GET]
    
+ Response 200 (application/json)

        {
            "httpCode" : 200,
            "result" : {
                "id" : "1" ,
               "email" : "test@gmail.com",
                "pseudo" : "toto",
                "permission":"ROLE_USER",
                "favoriteProviderForNotification" : "FACEBOOK",
                "connectionKey":"dGVzdEBnbWFpbC5jb206MTM4NDI2MzM2Njo3NzFhZDMxN2JkYTVhNjdmZjZiNmVkNWJmZGQzNTY3MDgxNzM1MmFkY2RhYTAyMDkzZTBjY2VjZWNkYmE0MmQ2",
                "connectionKeyCreatedDate":1383658566439
            }
        }


# Group User
User resources

## Single User [/user/{user_id}]
+ Parameters
    + user_id (required, number, `1`) ... Number `id` of the user.

### Retreive single user [GET]

+ Response 200 (application/json)

        {
           "httpCode": 200,
           "errorResponse": null,
           "result":
           {
               "id": 1,
               "email": "test@gmail.com",
               "password": null,
               "pseudo": "test",
               "permission": "ROLE_USER",
               "favoriteProviderForNotification" : "FACEBOOK",
               "connectionKey": null,
               "connectionKeyCreatedDate": null
           }
        }

### Update single user [PUT]

+ Response 200 (application/json)

        {
           "httpCode": 200,
           "result" : {
                "id" : "1",
                "email" : "test@gmail.com",
                "password" : "NULL" ,
                "pseudo" : "totor",
                "permission":"ROLE_USER",
                "favoriteProviderForNotification" : "TWITTER",
                "connectionKey":"dGVzdEBnbWFpbC5jb206MTM4NDI2MzM2Njo3NzFhZDMxN2JkYTVhNjdmZjZiNmVkNWJmZGQzNTY3MDgxNzM1MmFkY2RhYTAyMDkzZTBjY2VjZWNkYmE0MmQ2",
                "connectionKeyCreatedDate":1383658566439
            }
        }

### Delete single user [DELETE]

+ Response 200 (application/json)

        {
            "httpCode": 200,
            "result" : "User Deleted"
        }


## User List [/user/list]

### Retreive user list [GET]

+ Response 200 (application/json)

        {
           "httpCode": 200,
           "result" : [{
                "id" : "1",
                "email" : "test@gmail.com",
                "password" : "NULL" ,
                "pseudo" : "totor",
                "permission":"ROLE_USER",
                "favoriteProviderForNotification" : "TWITTER",
                "connectionKey":"dGVzdEBnbWFpbC5jb206MTM4NDI2MzM2Njo3NzFhZDMxN2JkYTVhNjdmZjZiNmVkNWJmZGQzNTY3MDgxNzM1MmFkY2RhYTAyMDkzZTBjY2VjZWNkYmE0MmQ2",
                "connectionKeyCreatedDate":1383658566439
           }, {
                "id" : "2",
                "email" : "test2@gmail.com",
                "password" : "NULL" ,
                "pseudo" : "totor2",
                "permission":"ROLE_USER",
                "favoriteProviderForNotification" : "TWITTER",
                "connectionKey":"zefVzdEBnbWFpbC5jb206MTM4NDI2MzM2Njo3NzFhZDMxN2JkYTVhNjdmZjZiNmVkNWJmZGQzNTY3MDgxNzM1MmFkY2RhYTAyMDkzZTBjY2VjZWNkYmE0MmQ2",
                "connectionKeyCreatedDate":1383658566437
           }]
        }